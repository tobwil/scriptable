{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "pink",
    "glyph" : "magic"
  },
  "name" : "aWattar",
  "script" : "const url = \"https:\/\/api.awattar.de\/v1\/marketdata\";\nconst req = new Request(url);\nconst res = await req.loadJSON();\n\nlet currentTime = new Date(res.data[0].start_timestamp);\nlet currentPrice = res.data[0].marketprice \/ 1000;\nlet minPrice = currentPrice;\nlet minTime;\n\nfor (let i = 0; i < 24; i++) {\n    let price = res.data[i].marketprice \/ 1000;\n    if (price < minPrice) {\n        minPrice = price;\n        minTime = new Date(res.data[i].start_timestamp);\n    }\n}\n\nlet widget = new ListWidget();\nwidget.backgroundColor = new Color(\"#1c1c1e\");\n\nwidget.addSpacer();\n\nlet titleText = widget.addText(\"⚡️Energy Prices EEX Spotmarkt⚡️\");\ntitleText.textColor = Color.white();\ntitleText.font = Font.boldSystemFont(16);\ntitleText.centerAlignText();\n\nwidget.addSpacer(8);\n\nlet currentPriceText = widget.addText(`Current: ${currentPrice.toFixed(2)} €\/kWh`);\ncurrentPriceText.textColor = Color.white();\ncurrentPriceText.font = Font.systemFont(14);\ncurrentPriceText.centerAlignText();\nlet currentTimeText=widget.addText(`${currentTime.toLocaleString()}`);\ncurrentTimeText.textColor=Color.white();\ncurrentTimeText.font=Font.systemFont(12);\ncurrentTimeText.centerAlignText();\n\nwidget.addSpacer(8);\n\nlet minPriceText=widget.addText(`Cheapest: ${minPrice.toFixed(2)} €\/kWh`);\nminPriceText.textColor=Color.white();\nminPriceText.font=Font.systemFont(14);\nminPriceText.centerAlignText();\n\nlet minTimeText;\nif (minTime) {\n    minTimeText = widget.addText(`${minTime.toLocaleString()}`);\n} else {\n    minTimeText = widget.addText(`Now`);\n}\nminTimeText.textColor=Color.white();\nminTimeText.font=Font.systemFont(12);\nminTimeText.centerAlignText()\n\n\n\/\/ Add this code after the `minTimeText.centerAlignText()` line\n\nwidget.addSpacer(8);\n\nlet chart = new DrawContext();\nchart.size = new Size(320, 100);\nchart.opaque = false;\nchart.setFillColor(new Color(\"#1c1c1e\"));\nchart.fillRect(new Rect(0, 0, 320, 100));\n\nlet maxPrice = Math.max(...res.data.slice(0, 24).map(x => x.marketprice)) \/ 1000;\nlet minPriceIndex = res.data.slice(0, 24).findIndex(x => x.marketprice \/ 1000 === minPrice);\n\nfor (let i = 0; i < 24; i++) {\n    let price = res.data[i].marketprice \/ 1000;\n    let barHeight = (price \/ maxPrice) * 80;\n    if (i === minPriceIndex) {\n        chart.setFillColor(Color.green());\n    } else if (i === 0) {\n        chart.setFillColor(Color.gray());\n    } else {\n        chart.setFillColor(Color.white());\n    }\n    chart.fillRect(new Rect(i * (320 \/ 24), 100 - barHeight, (320 \/ 24) - 4, barHeight));\n}\n\nlet chartImage = chart.getImage();\nwidget.addImage(chartImage);\n\nwidget.addSpacer();\nconsole.log(res)\n\nScript.setWidget(widget);\nScript.complete();",
  "share_sheet_inputs" : [

  ]
}